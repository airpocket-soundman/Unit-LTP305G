{"category":"LTP305G","color":"#00c6e0","blocks":["__LTP305G_scroll_message","__LTP305G_fixed_message","__LTP305G_animation","__LTP305G_init_LTP305G"],"jscode":"// Block __LTP305G_scroll_message\nvar __LTP305G_scroll_message_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1 %2\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"scroll message\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"scroll_message\"\n        }\n    ],\n    \"colour\": \"#00c6e0\"\n};\n\nwindow['Blockly'].Blocks['__LTP305G_scroll_message'] = {\n    init: function() {\n        this.jsonInit(__LTP305G_scroll_message_json);\n    }\n};\n\nwindow['Blockly'].Python['__LTP305G_scroll_message'] = function(block) {\n    var scroll_message = Blockly.Python.valueToCode(block, 'scroll_message', Blockly.Python.ORDER_NONE);\n    return `message = str(${scroll_message})\nmessage = \"S:\" + message[:128]\ndata = [ord(c) for c in message]  # 文字列をバイト列に変換\ni2c0.addr = 0x59  # アドレスを設定\ni2c0.write_mem_list(len(data), data)  # バイト列を送信` + \"\\n\";\n};\n\n// Block __LTP305G_fixed_message\nvar __LTP305G_fixed_message_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1 %2\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"fixed message\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"fixed_message\"\n        }\n    ],\n    \"colour\": \"#00c6e0\"\n};\n\nwindow['Blockly'].Blocks['__LTP305G_fixed_message'] = {\n    init: function() {\n        this.jsonInit(__LTP305G_fixed_message_json);\n    }\n};\n\nwindow['Blockly'].Python['__LTP305G_fixed_message'] = function(block) {\n    var fixed_message = Blockly.Python.valueToCode(block, 'fixed_message', Blockly.Python.ORDER_NONE);\n    return `message = str(${fixed_message})\nmessage = \"F:\" + message[:1]\ndata = [ord(c) for c in message]  # 文字列をバイト列に変換\ni2c0.addr = 0x59  # アドレスを設定\ni2c0.write_mem_list(len(data), data)  # バイト列を送信` + \"\\n\";\n};\n\n// Block __LTP305G_animation\nvar __LTP305G_animation_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1 %2\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"animation\"\n        },\n        {\n            \"type\": \"input_value\",\n            \"name\": \"animation\"\n        }\n    ],\n    \"colour\": \"#00c6e0\"\n};\n\nwindow['Blockly'].Blocks['__LTP305G_animation'] = {\n    init: function() {\n        this.jsonInit(__LTP305G_animation_json);\n    }\n};\n\nwindow['Blockly'].Python['__LTP305G_animation'] = function(block) {\n    var animation = Blockly.Python.valueToCode(block, 'animation', Blockly.Python.ORDER_NONE);\n    return `message = str(${animation})\nmessage = \"A:\" + message[:1]\ndata = [ord(c) for c in message]  # 文字列をバイト列に変換\ni2c0.addr = 0x59  # アドレスを設定\ni2c0.write_mem_list(len(data), data)  # バイト列を送信` + \"\\n\";\n};\n\n// Block __LTP305G_init_LTP305G\nvar __LTP305G_init_LTP305G_json = {\n    \"previousStatement\": null,\n    \"nextStatement\": null,\n    \"message0\": \"%1\",\n    \"args0\": [\n        {\n            \"type\": \"field_label\",\n            \"text\": \"init HPDL305G\"\n        }\n    ],\n    \"colour\": \"#00c6e0\"\n};\n\nwindow['Blockly'].Blocks['__LTP305G_init_LTP305G'] = {\n    init: function() {\n        this.jsonInit(__LTP305G_init_LTP305G_json);\n    }\n};\n\nwindow['Blockly'].Python['__LTP305G_init_LTP305G'] = function(block) {\n        return `i2c0 = i2c_bus.easyI2C(i2c_bus.PORTA, 0x00, freq=400000)` + \"\\n\";\n};\n\n","code":{"scroll_message":["window['Blockly'].Python['__LTP305G_scroll_message'] = function(block) {\n    var scroll_message = Blockly.Python.valueToCode(block, 'scroll_message', Blockly.Python.ORDER_NONE);\n    return `message = str(${scroll_message})\nmessage = \"S:\" + message[:128]\ndata = [ord(c) for c in message]  # 文字列をバイト列に変換\ni2c0.addr = 0x59  # アドレスを設定\ni2c0.write_mem_list(len(data), data)  # バイト列を送信` + \"\\n\";\n};\n\n","message = str(${scroll_message})\nmessage = \"S:\" + message[:128]\ndata = [ord(c) for c in message]  # 文字列をバイト列に変換\ni2c0.addr = 0x59  # アドレスを設定\ni2c0.write_mem_list(len(data), data)  # バイト列を送信"],"fixed_message":["window['Blockly'].Python['__LTP305G_fixed_message'] = function(block) {\n    var fixed_message = Blockly.Python.valueToCode(block, 'fixed_message', Blockly.Python.ORDER_NONE);\n    return `message = str(${fixed_message})\nmessage = \"F:\" + message[:1]\ndata = [ord(c) for c in message]  # 文字列をバイト列に変換\ni2c0.addr = 0x59  # アドレスを設定\ni2c0.write_mem_list(len(data), data)  # バイト列を送信` + \"\\n\";\n};\n\n","message = str(${fixed_message})\nmessage = \"F:\" + message[:1]\ndata = [ord(c) for c in message]  # 文字列をバイト列に変換\ni2c0.addr = 0x59  # アドレスを設定\ni2c0.write_mem_list(len(data), data)  # バイト列を送信"],"animation":["window['Blockly'].Python['__LTP305G_animation'] = function(block) {\n    var animation = Blockly.Python.valueToCode(block, 'animation', Blockly.Python.ORDER_NONE);\n    return `message = str(${animation})\nmessage = \"A:\" + message[:1]\ndata = [ord(c) for c in message]  # 文字列をバイト列に変換\ni2c0.addr = 0x59  # アドレスを設定\ni2c0.write_mem_list(len(data), data)  # バイト列を送信` + \"\\n\";\n};\n\n","message = str(${animation})\nmessage = \"A:\" + message[:1]\ndata = [ord(c) for c in message]  # 文字列をバイト列に変換\ni2c0.addr = 0x59  # アドレスを設定\ni2c0.write_mem_list(len(data), data)  # バイト列を送信"],"init_LTP305G":["window['Blockly'].Python['__LTP305G_init_LTP305G'] = function(block) {\n        return `i2c0 = i2c_bus.easyI2C(i2c_bus.PORTA, 0x00, freq=400000)` + \"\\n\";\n};\n\n","i2c0 = i2c_bus.easyI2C(i2c_bus.PORTA, 0x00, freq=400000)"]}}